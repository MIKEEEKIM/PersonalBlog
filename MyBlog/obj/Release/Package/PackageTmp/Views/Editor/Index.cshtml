
@model MyBlog.Models.EditorView

@{
    ViewBag.Title = "编辑器";
}
@section head{
<style>
    .editor-container {
        margin-top: 12px;
        border-radius: 0px;
    }

    .editor-container-title {
        height: 33.6px;
        line-height: 33.6px;
        color: black;
        font-weight: bold;
        font-size: 16px;
        color: #ffffff;
    }

    .breakdiv {
        height: 12px;
    }
</style>
}

<h3 style="font-weight:bold;padding-top:12px;">写文章</h3>
<hr />
<!-- 模态框（Modal） -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel">操作结果</h4>
            </div>
            <div id="myModalBody" class="modal-body"></div>
            <div class="modal-footer">
                <button id="modal-close" type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button id="model-submit" type="button" class="btn btn-primary">确定</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<div class="panel panel-info editor-container">
    <div class="panel-heading" style="padding:2px;background-color:#00838f;border-radius:0px;">
        <div class="container">
            <div class="row">
                <div class="col-md-2 editor-container-title">
                    写博文
                </div>
                <div class="col-lg-offset-8 col-lg-1">
                    <button type="button" class="btn btn-link" style="font-size:12px;color:#ffffff">草稿箱(0)</button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row" style="padding-top:12px;">        
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-addon" style="background-color:#00838f;color:#ffffff;">标题</span>
                    <input id="artical-title" class="form-control" type="text" value="@Model.Title" placeholder="请输入标题..." />
                </div>
            </div>
            <div class="col-md-6">
                <div class="btn-group" id="tag-container">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            添加
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var category in Model.Categories)
                            {
                                bool isHad = false;
                                if(Model.HadCategories!=null)
                                {                               
                                    foreach (var hadCategory in Model.HadCategories)
                                    {
                                        if (hadCategory.CategoryId == category.CategoryId)
                                        {
                                            isHad = true;
                                            <li><a tag="@category.CategoryId" class="add-tag" style="display:none;">@category.Name</a></li>
                                        }
                                    }
                                }
                                if (isHad == false)
                                {
                                    <li><a tag="@category.CategoryId" class="add-tag">@category.Name</a></li>
                                }
                                else
                                {
                                    isHad = false;
                                }
                            }
                        </ul>
                    </div>
                    @if (Model.HadCategories != null)
                    {
                        foreach (var hadCategory in Model.HadCategories)
                        {
                            <button class="btn btn-default tag-item" tag="@hadCategory.CategoryId" type="button">@hadCategory.Name</button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="panel-body">
        <!-- 加载编辑器的容器 -->
        <script id="container" name="content" type="text/plain">@Html.Raw(Model.ContentTxt)</script>
        <!-- 配置文件 -->
        <script type="text/javascript" src="~/Content/ueditor/ueditor.config.js"></script>
        <!-- 编辑器源码文件 -->
        <script type="text/javascript" src="~/Content/ueditor/ueditor.all.js"></script>
        <!-- 实例化编辑器 -->
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="btn-group btn-group-sm">
                    @if (Model.IsAlter)
                    {
                        <button id="alterbtn" type="button" class="btn btn-info" style="background-color:#00838f">修改</button>
                    }
                    else
                    {
                        <button id="submitbtn" type="button" class="btn btn-info" style="background-color:#00838f">发表</button>
                    }                  
                    <button id="cancelbtn" type="button" class="btn btn-default">取消</button>
                </div>
            </div>
        </div>
    </div>
    <div class="breakdiv"></div>
    <input type="hidden" id="articalid" value="@Model.ArticalId" />
</div>
@section script {
<script>
    var ue = UE.getEditor('container', {
        autoWeight: true
    });

    // 在修改文章时，为已有类型按钮添加点击事件
    var addbtns = document.getElementsByClassName("add-tag");
    var hadBtns = document.getElementsByClassName("tag-item");
    for (var i = 0; i < hadBtns.length; i++) {
        hadBtns[i].onclick = function () {
            addbtns[$(this).attr("tag") - 1].style.display = "block";
            $(this).remove();
        };
    }

    ue.ready(function () {
        // 设置编辑器的内容
        //ue.setContent('');
        // 获取html内容，返回：<p>hello</p>
        //var html = ue.getContent();
        // 获取纯文本内容，返回：hello
        //var txt = ue.getContentTxt();
        

        // 编辑器宽度自适应
        var edui = document.getElementById("edui1");
        var container = document.getElementById("container");

        edui.style.width = container.style.width;
        window.onresize = function (e) {
            e.preventDefault();
            edui.style.width = container.style.width;
            console.log("onresize");
            resizeHandler();
        }
    })

    var myModalBody = document.getElementById("myModalBody");
    var modalclose = document.getElementById("modal-close");
    var modalsubmit = document.getElementById("model-submit");
    
    var submitbtn = document.getElementById("submitbtn");
    var cancelbtn = document.getElementById("cancelbtn");
    var alterbtn = document.getElementById("alterbtn");

    var categoryid = document.getElementById("categoryid");

    modalsubmit.onclick = function () {
        window.location.href = "/Account";
    };

    // 提交文章
    if (submitbtn != null)
    {
        submitbtn.onclick = function () {
            // 获取文章类型相关内容
            var tags = document.getElementsByClassName("tag-item");
            var categoriesTxt = "";
            for (var i = 0; i < tags.length; i++)
            {
                categoriesTxt = categoriesTxt + tags[i].getAttribute("tag") + ";";
            }

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Editor/CreatePost", true);
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhr.send(
                "title=" + document.getElementById("artical-title").value
                + "&categoryid=" + categoriesTxt
                + "&contentTxt=" + ue.getContentTxt()
                + "&content=" + ue.getContent().replace(/&/g, "\\u0026")
            );
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var jsonobj = JSON.parse(xhr.responseText);
                        if (jsonobj.Result === true) {
                            myModalBody.innerHTML = '成功发表文章(￣▽￣)"';
                            modalclose.style.display = "none";
                            $('#myModal').modal('show');
                        } else {
                            modalsubmit.style.display = "none";
                            myModalBody.innerHTML = '发表文章失败';
                            $('#myModal').modal('show');
                            
                        }
                    } else {
                        modalsubmit.style.display = "none";
                        myModalBody.innerHTML = '发表文章失败';
                        $('#myModal').modal('show');
                    }
                }
            };
        };
    }
    
    // 修改文章
    if (alterbtn != null)
    {
        alterbtn.onclick = function () {
            // 获取文章类型相关内容
            var tags = document.getElementsByClassName("tag-item");
            var categoriesTxt = "";
            for (var i = 0; i < tags.length; i++) {
                categoriesTxt = categoriesTxt + tags[i].getAttribute("tag") + ";";
            }
            var articalid = document.getElementById("articalid").value;
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Editor/AlterPost", true);
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhr.send(
                "articalId=" + articalid
                + "&title=" + document.getElementById("artical-title").value
                + "&categoryid=" + categoriesTxt
                + "&contentTxt=" + ue.getContentTxt()
                + "&content=" + ue.getContent().replace(/&/g, "\\u0026")
            );
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var jsonobj = JSON.parse(xhr.responseText);
                        if (jsonobj.Result === true) {
                            myModalBody.innerHTML = '成功修改文章(￣▽￣)"';
                            modalclose.style.display = "none";
                            $('#myModal').modal('show');
                        } else {
                            modalsubmit.style.display = "none";
                            myModalBody.innerHTML = '修改文章失败';
                            $('#myModal').modal('show');
                        }
                    } else {
                        modalsubmit.style.display = "none";
                        myModalBody.innerHTML = '修改文章失败';
                        $('#myModal').modal('show');
                    }
                }
            };
        };
    }


    // 类型管理
    var addbtns = document.getElementsByClassName("add-tag");
    var tagcontainer = document.getElementById("tag-container");

    for (var i = 0; i < addbtns.length; i++){
        addbtns[i].onclick = function (e) {
            e.preventDefault();
            var newTagItem = document.createElement('button');
            // <button class="btn btn-default tag-item" tag="" type="button"
            newTagItem.setAttribute("class", "btn btn-default tag-item");
            newTagItem.setAttribute("tag", this.getAttribute("tag"));
            newTagItem.setAttribute("type", "button");
            newTagItem.innerHTML = this.innerHTML;
            this.style.display = "none";
            var addbtn = this;
            // 点击tag按钮删除自己
            newTagItem.onclick = function () {
                addbtn.style.display = "block";
                $(this).remove();
            };
            tagcontainer.appendChild(newTagItem);
        }
    }
</script>
}


